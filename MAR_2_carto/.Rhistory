st_crs(tun)
tun <- st_read("data/tun_admin.gpkg")
routes <- st_transform(st_read("data/TUN_highways.gpkg"), crs = st_crs(tun))
st_crs(villes)
villes <- st_read("data/TUN_places.gpkg")
st_crs(villes)
head(tun)
#| fig-height: 6
#| fig-width: 2.95
par(mar = c(0, 0, 0, 0), bg = "#F1F3F5")
plot(st_geometry(tun$reg_nom), col = "#5b89a3", border = "white", lwd = 0.5)
#| fig-height: 6
#| fig-width: 2.95
par(mar = c(0, 0, 0, 0), bg = "#F1F3F5")
plot(tun$reg_nom, col = "#5b89a3", border = "white", lwd = 0.5)
colnames(tun)
plot(tun["gou_cap_dist"])
plot(tun["reg_code"])
#| output: false
library("sf")
st_layers("data/tun_admin.gpkg")
st_layers("data/tun_admin.gpkg")
st_layers("data/tun_admin.gpkg")
st_layer("data/tun_admin.gpkg")
admin <- st_read("data/tun_admin.gpkg")
st_layers(admin)
st_layers("data/tun_admin.gpkg")
tun <- st_read("data/tun_admin.gpkg", layer = "delegation")
tun
st_layers("data/tun_admin.gpkg")
tun <- st_read("data/tun_admin.gpkg", layer = "region")
tun
tun <- st_read("data/tun_admin.gpkg", layer = "delegation")
delegations <- st_read("data/tun_admin.gpkg", layer = "delegation")
data <- read.csv("data/don_del.csv")
delegations <- st_read("data/tun_admin.gpkg", layer = "delegation")
routes <- st_transform(st_read("data/TUN_highways.gpkg"), crs = st_crs(tun))
places <- st_transform(st_read("data/TUN_places.gpkg"), crs = st_crs(tun))
data <- read.csv("data/don_del.csv")
data <- read.csv2("data/don_del.csv")
View(data)
head(data)
tun <-  merge(
x = del[,"del_code"],  # L'objet sf (seulement le champ del_code)
y = data,          # le data.frame
by.x = "del_code",  # identifiant dans x
by.y = "del_code",  # identifiant dans y
all.x = TRUE         # conserver toutes les lignes
)
del <- st_read("data/tun_admin.gpkg", layer = "delegation")
routes <- st_transform(st_read("data/TUN_highways.gpkg"), crs = st_crs(tun))
places <- st_transform(st_read("data/TUN_places.gpkg"), crs = st_crs(tun))
data <- read.csv2("data/don_del.csv")
head(data)
tun <-  merge(
x = del[,"del_code"],  # L'objet sf (seulement le champ del_code)
y = data,          # le data.frame
by.x = "del_code",  # identifiant dans x
by.y = "del_code",  # identifiant dans y
all.x = TRUE         # conserver toutes les lignes
)
View(tun)
(tun)
tun <-subset(tun, select = c("del_code","geometry"))
View(tun)
del <- st_read("data/tun_admin.gpkg", layer = "delegation")
routes <- st_transform(st_read("data/TUN_highways.gpkg"), crs = st_crs(tun))
places <- st_transform(st_read("data/TUN_places.gpkg"), crs = st_crs(tun))
data <- read.csv2("data/don_del.csv")
head(data)
tun <-  merge(
x = del[,"del_code"],  # L'objet sf (seulement le champ del_code)
y = data,          # le data.frame
by.x = "del_code",  # identifiant dans x
by.y = "del_code",  # identifiant dans y
all.x = TRUE         # conserver toutes les lignes
)
head(tun)
del <- st_read("data/tun_admin.gpkg", layer = "delegation")
routes <- st_transform(st_read("data/TUN_highways.gpkg"), crs = st_crs(tun))
places <- st_transform(st_read("data/TUN_places.gpkg"), crs = st_crs(tun))
data <- read.csv2("data/don_del.csv")
head(data)
tun <-  merge(
x = del[,"del_code"],  # L'objet sf (seulement le champ del_code)
y = data,          # le data.frame
by.x = "del_code",  # identifiant dans x
by.y = "del_code",  # identifiant dans y
all.x = TRUE         # conserver toutes les lignes
)
head(tun)
tun <-subset(tun, select = c("del_code","del_nom_fr","del_nom_ar","reg_code","reg_nom", "geometry"))
View(tun)
del <- st_read("data/tun_admin.gpkg", layer = "delegation")
routes <- st_transform(st_read("data/TUN_highways.gpkg"), crs = st_crs(tun))
places <- st_transform(st_read("data/TUN_places.gpkg"), crs = st_crs(tun))
data <- read.csv2("data/don_del.csv")
head(data)
tun <-  merge(
x = del[,"del_code"],  # L'objet sf (seulement le champ del_code)
y = data,          # le data.frame
by.x = "del_code",  # identifiant dans x
by.y = "del_code",  # identifiant dans y
all.x = TRUE         # conserver toutes les lignes
)
head(tun)
del <- st_read("data/tun_admin.gpkg", layer = "delegation")
routes <- st_transform(st_read("data/TUN_highways.gpkg"), crs = st_crs(tun))
places <- st_transform(st_read("data/TUN_places.gpkg"), crs = st_crs(tun))
data <- read.csv2("data/don_del.csv")
head(data)
tun <-  merge(
x = del[,"del_code"],  # L'objet sf (seulement le champ del_code)
y = data,          # le data.frame
by.x = "del_code",  # identifiant dans x
by.y = "del_code",  # identifiant dans y
all.x = TRUE         # conserver toutes les lignes
)
del <- st_read("data/tun_admin.gpkg", layer = "delegation")
routes <- st_transform(st_read("data/TUN_highways.gpkg"), crs = st_crs(tun))
data <- read.csv2("data/don_del.csv")
tun <-  merge(
x = del[,"del_code"],  # L'objet sf (seulement le champ del_code)
y = data,          # le data.frame
by.x = "del_code",  # identifiant dans x
by.y = "del_code",  # identifiant dans y
all.x = TRUE         # conserver toutes les lignes
)
tun
tun
library("simplermarkdown")
install.packages("simplermarkdown")
read.xls("data/don_del.xls")
read.xlss("data/don_del.xls")
read.xls2("data/don_del.xls")```
read.xls2("data/don_del.xls")
read_excel("data/don_del.xls")
library("readxl")
install.packages("readxl")
read.csv2
library("readxl")
read_excel("data/don_del.xls")
#| output: false
data <- read.csv2("data/don_del.csv")
meta <- read.csv2("data/don_del_meta.csv")
#| output: false
data <- read.csv2("data/don_del.csv")
meta <- read.csv2("data/don_del_meta.csv")
md_table(head(meta))
meta <- read.csv2("data/don_del_meta.csv", sep=",")
head(meta)
md_table(head(meta))
install.packages("kable")
install.packages("kable")
install.packages("kable")
install.packages("reticulate")
sf.colors
sf.colors()
sf.colors(n = 10, cutoff.tails = c(0.35, 0.2), alpha = 1, categorical = FALSE)
plot(tun["reg_code"], key.pos = 1, pal = sf.colors(10))
plot(tun["reg_code"], key.pos = 1, pal = sf.colors(1))
plot(tun["reg_code"], key.pos = 1, pal = sf.colors(2))
plot(tun["reg_code"], key.pos = 1, pal = sf.colors(3))
plot(tun["reg_code"], key.pos = 1, pal = sf.colors(4))
plot(tun["reg_code"], key.pos = 1, pal = sf.colors(5))
plot(tun["reg_code"], key.pos = 1, pal = sf.colors(6))
plot(tun["popto_2010"])
cut(nc$popto_2010, 5)
cut(nc$popto_2010, 5)
cut(tun$popto_2010, 5)
tun$f <- cut(tun$popto_2010, 5)
library(classInt)
classIntervals(tun["popto_2010"], 5)
tun["popto_2010"]
st_drop_geometry(tun["popto_2010"])
st_drop_geometry(tun["popto_2010"])
classIntervals(st_drop_geometry(tun["popto_2010"]), 5)
st_drop_geometry(tun["popto_2010"])
as.vector(st_drop_geometry(tun["popto_2010"]))
classIntervals(as.vector(st_drop_geometry(tun["popto_2010"])), 5)
as.vector(st_drop_geometry(tun["popto_2010"])),
as.vector(st_drop_geometry(tun["popto_2010"]))
classIntervals(val, 5)
val =as.vector(st_drop_geometry(tun["popto_2010"]))
classIntervals(val, 5)
classIntervals(var = val, 5)
classIntervals(var = val, n = 5, style = "quantile")
val
st_layers("data/tun_admin.gpkg")
mf_map(x = tun)
mf_map(x = tun, border = "white")
#| warning: false
#| warning: false
#| fig-height: 6
#| warning: false
#| fig-height: 6
#| fig-width: 2.95
#| warning: false
#| fig-height: 6
#| fig-width: 2.95
mf_map(x = tun, border = "white")
install.packages("cartogram")
#| output: false
del <- st_read("data/tun_admin.gpkg", layer = "delegation")
gouv <- st_read("data/tun_admin.gpkg", layer = "gouvernorat")
region <- st_read("data/tun_admin.gpkg", layer = "region")
#| output: false
library("sf")
#| output: false
del <- st_read("data/tun_admin.gpkg", layer = "delegation")
gouv <- st_read("data/tun_admin.gpkg", layer = "gouvernorat")
region <- st_read("data/tun_admin.gpkg", layer = "region")
#| output: false
data <- read.csv2("data/don_del.csv")
#| echo: false
meta <- read.csv2("data/don_del_meta.csv", sep=",")
#| output: false
tun <-  merge(
x = del[,"del_code"],
y = data,
by = "del_code",
all.x = TRUE
)
View(tun)
popto_2010_dorling <- cartogram_dorling(x = tun, weight = "menag_2014", k = 7)
library(cartogram)
popto_2010_dorling <- cartogram_dorling(x = tun, weight = "menag_2014", k = 7)
popto_2010_dorling <- cartogram_dorling(x = tun, weight = "menag_2014", k = 1)
cartogram_dorling
popto_2010_dorling <- cartogram_dorling(x = tun, weight = "menag_2014", k = 1)
View(tun)
popto_2010_dorling <- cartogram_dorling(x = tun, weight = "popto_2010", k = 1)
install.packages("packcircles")
popto_2010_dorling <- cartogram_dorling(x = tun, weight = "popto_2010", k = 1)
library(cartogram)
popto_2010_dorling <- cartogram_dorling(x = tun, weight = "popto_2010", k = 1)
popto_2010_dorling <- cartogram_dorling(x = tun, weight = "popto_2010")
nc = st_read(system.file("shape/nc.shp", package="sf"), quiet = TRUE)
#| output: false
library("sf")
#| output: false
del <- st_read("data/tun_admin.gpkg", layer = "delegation")
gouv <- st_read("data/tun_admin.gpkg", layer = "gouvernorat")
region <- st_read("data/tun_admin.gpkg", layer = "region")
#| output: false
data <- read.csv2("data/don_del.csv")
#| output: false
tun <-  merge(
x = del[,"del_code"],
y = data,
by = "del_code",
all.x = TRUE
)
#| echo: true
#| output: false
routes <- st_transform(st_read("data/TUN_highways.gpkg"), crs = st_crs(del))
villes <- st_transform(st_read("data/TUN_places.gpkg"), crs = st_crs(del))
nc = st_read(system.file("shape/nc.shp", package="sf"), quiet = TRUE)
nc_utm <- st_transform(nc, 26916)
nc_utm_carto <- cartogram_dorling(nc_utm, weight = "BIR74")
popto_2010_dorling <- cartogram_dorling(tun, weight = "popto_2010")
tun
summary(tun$popto_2010)
popto_2010_dorling <- cartogram_dorling(tun, weight = "popto_2010")
colnames(tun)
popto_2010_dorling <- cartogram_dorling(tun, weight = "surfa_2010")
tun[tun$popto_2010 != NA,]
tun[,tun$popto_2010 != NA]
tun[!is.na(tun$popto_2010),]
tun2 = tun[!is.na(tun$popto_2010),]
popto_2010_dorling <- cartogram_dorling(tun2, weight = "popto_2010")
summary(tun$popto_2010)
st_write(tun, dsn = "test.geojson")
#| output: false
library("sf")
africa <- st_read("data/afrique.gpkg", layer = "africa")
#| echo: false
head(africa,4)
#| output: false
data <- read.csv2("data/worldbank_africa.csv")
#| echo: false
meta <- read.csv2("data/worldbank_africa_meta.csv", sep=",")
meta
#| echo: false
head(geom,4)
geom <- st_read("data/afrique.gpkg", layer = "africa")
#| echo: false
head(geom,4)
#| output: false
africa <-  merge(
x = geom[,"ISO3"],
y = data,
by.x = "ISO3",
by.y = "id",
all.x = TRUE
)
geom <- st_read("data/afrique.gpkg", layer = "africa")
#| echo: false
head(geom,4)
#| output: false
data <- read.csv2("data/worldbank_africa.csv")
#| echo: false
meta <- read.csv2("data/worldbank_africa_meta.csv", sep=",")
meta
#| output: false
africa <-  merge(
x = geom[,"ISO3"],
y = data,
by.x = "ISO3",
by.y = "id",
all.x = TRUE
)
#| output: false
#| head(data)
#| output: false
head(data)
#| output: false
data <- read.csv("data/worldbank_africa.csv")
head(data)
#| output: false
data <- read.csv("data/worldbank_africa.csv")
#| echo: false
meta <- read.csv("data/worldbank_africa_meta.csv")
meta
africa <-  merge(
x = geom[,"ISO3"],
y = data,
by.x = "ISO3",
by.y = "id",
all.x = TRUE
)
#| echo: true
#| output: false
st_layer(geom)
#| echo: true
#| output: false
st_layers(geom)
#| echo: true
#| output: false
st_layers("data/afrique.gpkg")
#| warning: false
head(africa)
geom <- st_transform(st_read("data/afrique.gpkg", layer = "africa"),"+init=epsg:3857")
geom <- st_transform(st_read("data/afrique.gpkg", layer = "africa"),"3857")
geom <- st_transform(st_read("data/afrique.gpkg", layer = "africa"),"epsg:3857")
library("geojsonsf")
pop2020_dorling <- cartogram_dorling(
africa[!is.na(africa$pop),],
weight = "pop",
k=0.5
)
afr[is.na(afr$pop),]
africa[is.na(africa$pop),]
africa[is.na(africa$pop),"pop"]
africa[is.na(africa$pop),"pop"] <- 0
africa[is.na(africa$pop),"pop"]
africa[is.na(africa$pop),"pop"] <- 0
afr_cont <- cartogram_cont(x = africa, weight = "pop",
prepare = "none",
itermax = 10)
africa
#| output: false
library("sf")
st_layers("data/afrique.gpkg")
#| output: false
geom <- st_transform(st_read("data/afrique.gpkg", layer = "africa"),"epsg:3857")
#| output: false
data <- read.csv("data/worldbank_africa.csv")
#| output: false
africa <-  merge(
x = geom[,"ISO3"],
y = data,
by.x = "ISO3",
by.y = "id",
all.x = TRUE
)
africa
afr_cont <- cartogram_cont(x = africa, weight = "pop",
prepare = "none",
itermax = 10)
africa[is.na(africa$pop),"pop"] <- 1
africa
afr_cont <- cartogram_cont(x = africa, weight = "pop",
prepare = "none",
itermax = 30)
plo(afr_cont$geometry)
plot(afr_cont$geometry)
africa
africa$pop
summary(africa$pop)
afr_cont <- cartogram_cont(x = africa, weight = "pop",
itermax = 30)
plot(afr_cont$geometry)
install.packages("leaflet")
africa
places_wgs84
places_wgs84 <- st_transform(places, 4326)
places_wgs84
head(places_wgs84)
colnames(places_wgs84)
install.packages("mapview")
install.packages("wbstats")
wb_search(pattern = "energy")
library(wbstats)
wb_search(pattern = "energy")
wb_search(pattern = "poverty")
wb_search(pattern = "Labor force")
wb_search(pattern = "Bird species, threatened")
wb_search(pattern = "Bird")
wb_search(pattern = "Animal")
wb_search(pattern = "anumal threatened")
wb_search(pattern = "anumal threatened")
wb_search(pattern = "animal threatened")
Bird species,
wb_search(pattern = "Bird species, threatened")
wb_search(pattern = "Bird")
oiseux_menacés <- wb_data("EN.BIR.THRD.NO", start_date = 2018, end_date = 2018)
oiseaux_menaces <- wb_data("EN.BIR.THRD.NO", start_date = 2018, end_date = 2018)
head(oiseaux_menaces)
head(oiseaux_menaces)
oiseaux_menaces <- wb_data("EN.BIR.THRD.NO", start_date = 2018, end_date = 2018)
head(oiseaux_menaces)
wb_search(pattern = "Bird")
oiseaux_menaces <- wb_data("EN.BIR.THRD.NO", start_date = 2018, end_date = 2018)
head(oiseaux_menaces)
africa_birds <-  merge(
x = geom[,"ISO3"],
y = oiseaux_menaces,
by.x = "ISO3",
by.y = "iso3c",
all.x = TRUE
)
#| output: false
geom <- st_transform(st_read("data/afrique.gpkg", layer = "africa"),"epsg:3857")
#| output: false
library("sf")
#| output: false
geom <- st_transform(st_read("data/afrique.gpkg", layer = "africa"),"epsg:3857")
wb_search(pattern = "Bird")
oiseaux_menaces <- wb_data("EN.BIR.THRD.NO", start_date = 2018, end_date = 2018)
head(oiseaux_menaces)
africa_birds <-  merge(
x = geom[,"ISO3"],
y = oiseaux_menaces,
by.x = "ISO3",
by.y = "iso3c",
all.x = TRUE
)
dim(africa_birds)
head(africa_birds)
#| output: false
geom <- st_transform(st_read("data/afrique.gpkg", layer = "africa"),"epsg:3857")
#| output: false
library("sf")
#| output: false
geom <- st_transform(st_read("data/afrique.gpkg", layer = "africa"),"epsg:3857")
#| output: false
data <- read.csv("data/worldbank_africa.csv")
#| output: false
africa <-  merge(
x = geom[,"ISO3"],
y = data,
by.x = "ISO3",
by.y = "id",
all.x = TRUE
)
africa
?mf_theme
??mf_theme
#| output: false
library("sf")
#| output: false
geom <- st_transform(st_read("data/afrique.gpkg", layer = "africa"),"epsg:3857")
#| output: false
data <- read.csv("data/worldbank_africa.csv")
#| output: false
africa <-  merge(
x = geom[,"ISO3"],
y = data,
by.x = "ISO3",
by.y = "id",
all.x = TRUE
)
grid <- st_make_grid(africa, 10000) %>%
st_as_sf(.) %>%
st_filter(., sou, .predicate = st_intersects)
grid <- st_make_grid(africa, 1000000) %>%
st_as_sf(.) %>%
st_filter(., sou, .predicate = st_intersects)
grid <- st_make_grid(africa, 1000000) %>%
st_as_sf(.) %>%
st_filter(., grid, .predicate = st_intersects)
grid <- st_make_grid(africa, 1000000) %>%
st_as_sf(.) %>%
st_filter(., grid, .predicate = st_intersects)
grid <- st_make_grid(africa, 100000) %>%
st_as_sf(.) %>%
st_filter(., grid, .predicate = st_intersects)
grid <- st_make_grid(africa, 100000)
plot(grid)
grid <- st_make_grid(africa, 500000)
plot(grid)
grid
grid <- st_as_sf(grid)
grid
plot(grid)
plot(grid)
grid <- st_filter(., sou, .predicate = st_intersects)
grid <- st_filter(grid, .predicate = st_intersects)
grid <- st_make_grid(africa, 500000)
plot(grid)
plot(africa, add = TRUE)
